trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  imageRepository: 'claimstatusapi'
  tag: '$(Build.BuildId)'
  acrServiceConnection: 'sc-acr-claimstatusapi-3' # ACR service connection name
  acrLoginServer: 'acrclaimstatusapicnalv2intro2b3.azurecr.io'
  armServiceConnection: 'sc-claimstatusapi-3' # Azure Resource Manager service connection name
  resourceGroupName: 'rg-cnalv2-introspect2b-test-3'
  containerAppName: 'claimstatusapi'

resources:
  repositories:
    - repository: self
      type: github
      name: chrisabbotthauxwell/claim-status-api
      ref: main
      endpoint: 'sc-github-chrisabbotthauxwell' # Github service connection name

steps:
  - checkout: self

  - task: Docker@2
    displayName: 'Build Docker image'
    inputs:
      containerRegistry: '$(acrServiceConnection)'
      repository: '$(imageRepository)'
      command: build
      Dockerfile: 'src/ClaimStatusAPI/Dockerfile'
      buildContext: 'src/ClaimStatusAPI'
      tags: |
        $(tag)
        latest

  - task: Docker@2
    displayName: 'Push Docker image to ACR'
    inputs:
      containerRegistry: '$(acrServiceConnection)'
      repository: '$(imageRepository)'
      command: push
      tags: |
        $(tag)
        latest

  - task: AzureCLI@2
    displayName: 'Deploy Docker image to ACA'
    inputs:
      azureSubscription: '$(armServiceConnection)'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        echo "Deploying $(acrLoginServer)/$(imageRepository):$(tag) to $(containerAppName)"
        # update container app to use the new image
        az containerapp update \
          --name "$(containerAppName)" \
          --resource-group "$(resourceGroupName)" \
          --image "$(acrLoginServer)/$(imageRepository):$(tag)"