trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  imageRepository: 'claimstatusapi'
  tag: '$(Build.BuildId)'
  acrServiceConnection: 'sc-acr-claimstatusapi-3' # ACR service connection name
  acrLoginServer: 'acrclaimstatusapicnalv2intro2b3.azurecr.io'
  armServiceConnection: 'sc-claimstatusapi-3' # Azure Resource Manager service connection name
  resourceGroupName: 'rg-cnalv2-introspect2b-test-3'
  containerAppName: 'claimstatusapi'

resources:
  repositories:
    - repository: self
      type: github
      name: chrisabbotthauxwell/claim-status-api
      ref: main
      endpoint: 'sc-github-chrisabbotthauxwell' # Github service connection name

steps:
  - checkout: self

  - task: Docker@2
    displayName: 'Build Docker image'
    inputs:
      containerRegistry: '$(acrServiceConnection)'
      repository: '$(imageRepository)'
      command: build
      Dockerfile: 'src/ClaimStatusAPI/Dockerfile'
      buildContext: 'src/ClaimStatusAPI'
      tags: |
        $(tag)
        latest

  - task: Docker@2
    displayName: 'Push Docker image to ACR'
    inputs:
      containerRegistry: '$(acrServiceConnection)'
      repository: '$(imageRepository)'
      command: push
      tags: |
        $(tag)
        latest

  - task: AzureCLI@2
    displayName: 'Set OpenAI secrets and deploy image to ACA'
    env:
      AZURE_OPENAI_KEY: $(AZURE_OPENAI_KEY)
      AZURE_OPENAI_ENDPOINT: $(AZURE_OPENAI_ENDPOINT)
      OPENAI_MODEL: $(OPENAI_MODEL)
    inputs:
      azureSubscription: '$(armServiceConnection)'
      scriptType: 'bash'
      scriptLocation: 'inlineScript'
      inlineScript: |
        set -euo pipefail

        # ensure containerapp extension is present
        az extension show -n containerapp >/dev/null 2>&1 || az extension add --name containerapp

        model="${OPENAI_MODEL:-gpt-4o-mini}"
        echo "Using OPENAI_MODEL=$model"

        # store secrets on the Container App (secret names must be lowercase/hyphen)
        az containerapp secret set \
          --name "$(containerAppName)" \
          --resource-group "$(resourceGroupName)" \
          --secrets azure-openai-key="$AZURE_OPENAI_KEY" azure-openai-endpoint="$AZURE_OPENAI_ENDPOINT"

        # set environment variables on the Container App; use @secret-name to reference stored secret
        az containerapp update \
          --name "$(containerAppName)" \
          --resource-group "$(resourceGroupName)" \
          --set-env-vars AZURE_OPENAI_KEY=@azure-openai-key AZURE_OPENAI_ENDPOINT=@azure-openai-endpoint OPENAI_MODEL=${model}

        # update image (this triggers a restart so the new secrets/env take effect)
        az containerapp update \
          --name "$(containerAppName)" \
          --resource-group "$(resourceGroupName)" \
          --image "$(acrLoginServer)/$(imageRepository):$(tag)"